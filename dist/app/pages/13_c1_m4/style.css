header .btnM {
  display: block !important;
}
.container .bg {
  background-image: url(../../assets/img/bg04.png);
  opacity: 0.3;
}
.container .triangulo {
  position: relative;
  width: 25em;
  height: 25em;
  margin-top: 3em;
}
.container .triangulo .cityContainer {
  position: absolute;
  width: 60em;
  height: 37em;
  left: -65.5%;
  top: -8em;
  z-index: 13;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 3cm);
  transform-style: preserve-3d;
}
.container .triangulo .cityContainer video {
  position: relative;
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}
.container .triangulo .cityContainer video _::-webkit-full-page-media,
.container .triangulo .cityContainer video _:future,
:root .container .triangulo .cityContainer video.safari_only {
  display: none;
}
.container .triangulo .cityContainer .city {
  position: absolute;
  width: 70%;
  height: 70%;
  left: 9em;
  top: 7em;
  z-index: 8;
  -o-object-fit: contain;
     object-fit: contain;
  display: none;
}
.container .triangulo .cityContainer .city _::-webkit-full-page-media,
.container .triangulo .cityContainer .city _:future,
:root .container .triangulo .cityContainer .city.safari_only {
  display: block;
}
.container .triangulo .hit {
  position: absolute;
  width: 5.8em;
  height: 5.8em;
  z-index: 20;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 4cm);
  transform-style: preserve-3d;
}
.container .triangulo .hit.visitado .borderM {
  filter: invert(100%) sepia(56%) saturate(1698%) hue-rotate(95deg) brightness(96%) contrast(105%);
}
.container .triangulo .hit.visitado .text {
  border: 0.1em solid #66FEE8;
}
.container .triangulo .hit.atual .hitImg,
.container .triangulo .hit.atual .borderM {
  transform: scale(1);
  animation: pulse 1s infinite;
}
@keyframes pulse {
  0% {
    transform: scale(0.95);
  }
  70% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.95);
  }
}
.container .triangulo .hit.atual .borderM {
  filter: invert(49%) sepia(98%) saturate(830%) hue-rotate(263deg) brightness(102%) contrast(99%);
}
.container .triangulo .hit.atual .text {
  border: 0.1em solid #EC66FE;
}
.container .triangulo .hit.inativo {
  filter: grayscale(100%);
  opacity: 0.5;
  pointer-events: none;
}
.container .triangulo .hit.hit1 {
  top: -2.5em;
  left: 6em;
}
.container .triangulo .hit.hit2 {
  top: 2.2em;
  left: 19.5em;
}
.container .triangulo .hit.hit3 {
  top: 8.5em;
  left: 10.5em;
}
.container .triangulo .hit.hit4 {
  top: 5.5em;
  left: -0.6em;
}
.container .triangulo .hit.hit5 {
  top: 15.5em;
  left: 3.6em;
}
.container .triangulo .hit.hit6 {
  top: 11.5em;
  left: 20.6em;
}
.container .triangulo .hit:hover .text {
  display: block;
}
.container .triangulo .hit .hitBase {
  position: absolute;
  width: 100%;
  height: 100%;
}
.container .triangulo .hit .hitImg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: drop-shadow(0.8em 0.8em 1.6em rgba(0, 0, 0, 0.8));
}
.container .triangulo .hit .borderM {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.container .triangulo .hit .text {
  position: absolute;
  width: auto;
  border: 0.1em solid #000;
  border-radius: 2em;
  padding: 0.2em;
  top: -1.8em;
  display: none;
}
.container .triangulo .hit .text .textInt {
  position: relative;
  width: -moz-max-content;
  width: max-content;
  padding: 0.2em 1em;
  background-color: #fff;
  border-radius: 2em;
  font-size: 0.6em;
  font-weight: 600;
  line-height: normal;
  text-align: center;
  color: #30313c;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
