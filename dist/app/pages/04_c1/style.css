.container .bg {
  background-image: url(../../assets/img/bg04.png);
  opacity: 0.5;
}
.container .titulo {
  position: absolute;
  font-size: 0.8em;
  font-weight: bold;
  color: #2BFED8;
  left: 1em;
  bottom: 1em;
}
.container .comeiaAll {
  position: relative;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 3cm);
  transform-style: preserve-3d;
  z-index: 12;
  width: 25em;
  height: 25em;
}
.container .comeiaAll .comeiaCenter {
  position: absolute;
  width: 10em;
  height: 10em;
  -o-object-fit: contain;
     object-fit: contain;
  top: 7.5em;
  left: 7.5em;
  pointer-events: none;
}
.container .comeiaAll .comeiaItem {
  position: absolute;
  width: 9.2em;
  height: 9.2em;
  -o-object-fit: contain;
     object-fit: contain;
  pointer-events: none;
}
.container .comeiaAll .comeiaItem4 {
  top: 0.7em;
  left: 12.2em;
  z-index: 4;
}
.container .comeiaAll .comeiaItem5 {
  top: 7.9em;
  left: 16.4em;
  z-index: 3;
}
.container .comeiaAll .comeiaItem6 {
  top: 15.15em;
  left: 12.1em;
  z-index: 2;
}
.container .comeiaAll .comeiaItem1 {
  top: 15.15em;
  left: 3.7em;
}
.container .comeiaAll .comeiaItem2 {
  top: 7.8em;
  left: -0.5em;
}
.container .comeiaAll .comeiaItem3 {
  top: 0.6em;
  left: 3.7em;
}
.container .comeiaAll .hit {
  position: absolute;
  width: 9.2em;
  height: 9.2em;
  z-index: 18;
}
.container .comeiaAll .hit.comeiaItem1 .seta {
  top: auto !important;
  bottom: -2em !important;
}
.container .comeiaAll .hit.comeiaItem1 .seta img {
  transform: rotate(0deg);
}
.container .comeiaAll .hit.comeiaItem1 .seta p {
  margin-block-start: 0.2em !important;
  margin-block-end: 0;
}
.container .comeiaAll .hit.comeiaItem2 .seta {
  flex-direction: row !important;
  top: 34% !important;
  left: -2.5em !important;
}
.container .comeiaAll .hit.comeiaItem2 .seta img {
  transform: rotate(-270deg);
}
.container .comeiaAll .hit.comeiaItem2 .seta p {
  margin-block-start: 0;
  margin-block-end: 0;
}
.container .comeiaAll .hit.comeiaItem4 {
  z-index: 4;
}
.container .comeiaAll .hit.comeiaItem5 {
  z-index: 3;
}
.container .comeiaAll .hit.comeiaItem5 .seta {
  flex-direction: row !important;
  top: 34% !important;
  left: 9.7em !important;
}
.container .comeiaAll .hit.comeiaItem5 .seta img {
  transform: rotate(270deg);
}
.container .comeiaAll .hit.comeiaItem5 .seta p {
  margin-block-start: 0;
  margin-block-end: 0;
}
.container .comeiaAll .hit.comeiaItem6 {
  z-index: 2;
}
.container .comeiaAll .hit.comeiaItem6 .seta {
  top: auto !important;
  bottom: -2em !important;
}
.container .comeiaAll .hit.comeiaItem6 .seta img {
  transform: rotate(0deg);
  filter: invert(72%) sepia(22%) saturate(2168%) hue-rotate(340deg) brightness(103%) contrast(101%);
}
.container .comeiaAll .hit.comeiaItem6 .seta p {
  margin-block-start: 0.2em !important;
  margin-block-end: 0;
}
.container .comeiaAll .hit svg {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 30;
}
.container .comeiaAll .hit svg path {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 30;
  fill: rgba(193, 28, 249, 0.7);
  cursor: pointer;
}
.container .comeiaAll .hit svg path:hover {
  fill: rgba(152, 4, 201, 0.7);
}
.container .comeiaAll .hit .seta {
  position: absolute;
  pointer-events: none;
  top: -3em;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 85%;
  left: 50%;
  margin-left: -42.5%;
  transform: rotateX(var(--xAngle)) rotateY(var(--yAngle)) translate3d(0, 0, 3cm);
  transform-style: preserve-3d;
  display: none;
  z-index: 40;
}
@media (max-width: 960px) {
  .container .comeiaAll .hit .seta {
    display: flex;
  }
}
.container .comeiaAll .hit .seta img {
  filter: invert(62%) sepia(39%) saturate(6357%) hue-rotate(148deg) brightness(99%) contrast(80%);
  transform: scaleY(-1);
  width: 3em;
  height: 3em;
}
.container .comeiaAll .hit .seta p {
  font-weight: bold;
  color: #fff;
  text-align: center;
  margin-block-end: 0.2em;
  text-transform: uppercase;
}
.container .comeiaAll .visitado path {
  fill: rgba(0, 0, 0, 0) !important;
}
.container .comeiaAll .atual {
  transform: scale(1);
  animation: pulse 2s infinite;
}
.container .comeiaAll .inativo {
  filter: grayscale(100%);
  opacity: 0.2;
}
.container .comeiaAll .inativo path {
  pointer-events: none;
  fill: rgba(0, 0, 0, 0.5) !important;
}
@keyframes pulse {
  0% {
    transform: scale(0.95);
  }
  70% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.95);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
